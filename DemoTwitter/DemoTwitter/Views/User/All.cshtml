@model PagedList.IPagedList<DemoTwitter.Models.User>
@using PagedList.Mvc;
<!DOCTYPE html>
<html>
<head>
    <title>Twitter | All Users</title>

    @using System.Web.Optimization
    @{
        Layout = null;
    }
    @Styles.Render("~/Content/css/bootstrap.min.css")
    @Styles.Render("~/Content/css/index.css")
    @Styles.Render("~/Content/css/tableStyle.css")

    @Scripts.Render("~/Content/js/jquery.js")
    @Scripts.Render("~/Content/js/bootstrap.min.js")

</head>
<body style="background: #f4f7f9">
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">
                    @if (Session["UserFullName"] != null)
                    {<span>
                                Welcome, @Session["UserFullName"].ToString()
                    </span>
                    }
                </a>
            </div>
            <div class="collapse navbar-collapse" id="myNavbar">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="@Url.Action("Index", "User")">Home</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span>Options</a>
                        <ul class="dropdown-menu">
                            <li><a href=@Url.Action("All", "User")>Show all users</a></li>
                        </ul>
                    </li>
                    <li class="dropdown">
                        <a href=@Url.Action("Logout", "User")><span class="glyphicon glyphicon-log-out"></span>Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container">
        <h4 class="text-center">All users</h4>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th class="text-left">Email</th>
                    <th class="text-left">First Name</th>
                    <th class="text-left">Last Name</th>
                    <th class="text-left">Action</th>
                </tr>
            </thead>
            <tbody class="table-hover">
                @foreach (var currentUser in Model)
                {
                    <tr>
                        <td class="text-left">@currentUser.Email</td>
                        <td class="text-left">@currentUser.FirstName</td>
                        <td class="text-left">@currentUser.LastName</td>
                        <td class="text-center">
                            @if (!currentUser.IsFollowed)
                            {
                                if (currentUser.Id == (int)Session["UserID"])
                                {
                                <a class="btn btn-default disabled">Follow</a>
                                }
                                else
                                {
                                <a href=@Url.Action("Follow", "User", new { followedUserId = currentUser.Id }) class="btn btn-success">Follow</a>  
                                }
                            }
                            else
                            {
                                <a href=@Url.Action("UnFollow", "User", new { followedUserId = currentUser.Id }) class="btn btn-danger">Unfollow</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="pagination-my">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
        <div class="pagination-my">@Html.PagedListPager(Model, page => Url.Action("All", "User", new { page }))</div>
    </div>
</body>
</html>
